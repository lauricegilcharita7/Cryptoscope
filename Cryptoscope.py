import datetime
import random
import textwrap
import requests

def fetch_dummy_sentiment_data():
    # –°–∏–º—É–ª—è—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Å —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ (–≤ —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Å—é–¥–∞ –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å API)
    sources = ['Twitter', 'Reddit', 'CryptoNews']
    data = {}
    for source in sources:
        score = random.uniform(-1, 1)  # –æ—Ç -1 (—Å—Ç—Ä–∞—Ö) –¥–æ 1 (–∂–∞–¥–Ω–æ—Å—Ç—å)
        data[source] = score
    return data

def calculate_fear_greed_index(sentiment_scores):
    combined_score = sum(sentiment_scores.values()) / len(sentiment_scores)
    return round((combined_score + 1) * 50)  # –æ—Ç 0 –¥–æ 100

def display_ascii_gauge(index):
    blocks = int(index / 5)
    bar = "‚ñà" * blocks + "-" * (20 - blocks)
    status = ""
    if index < 25:
        status = "üò± Extreme Fear"
    elif index < 50:
        status = "üòü Fear"
    elif index < 75:
        status = "üòÑ Greed"
    else:
        status = "üöÄ Extreme Greed"
    print(f"\n[Crypto Sentiment Index]\n\n[{bar}] {index}/100  {status}\n")

def main():
    print(f"üß† Analyzing crypto sentiment... ({datetime.datetime.now().isoformat()})")
    sentiment_data = fetch_dummy_sentiment_data()
    for src, val in sentiment_data.items():
        print(f" - {src}: {'{:+.2f}'.format(val)}")

    index = calculate_fear_greed_index(sentiment_data)
    display_ascii_gauge(index)

if __name__ == "__main__":
    main()
